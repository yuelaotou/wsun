<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wsun.repository.mapper.system.RoleMapper" >
  <resultMap id="BaseResultMap" type="Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, code, name, description, parent_id, order_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from wsun_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from wsun_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="Role" useGeneratedKeys="true" keyProperty="id">
    insert into wsun_role (code, name, 
      description, parent_id, order_id
      )
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, #{orderId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="Role" useGeneratedKeys="true" keyProperty="id">
    insert into wsun_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Role" >
    update wsun_role
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="Role" >
    update wsun_role
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      order_id = #{orderId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 以上为系统自动生成，不做任何变动，以便数据库移植 -->
	<resultMap id="WithResourceMap" extends="BaseResultMap" type="Role">
		<collection property="resourceList" ofType="Resource" javaType="ArrayList" column="id" select="getResources"></collection>
	</resultMap>
	<!-- 查询角色信息 -->
	<select id="getRoleList" resultMap="WithResourceMap" parameterType="map">
		SELECT
			role.id,
			role.`code`,
			role.`name`,
			role.description,
			role.parent_id,
			role.order_id
		FROM
			wsun_role AS role
		LEFT JOIN wsun_role_resource AS role_resource ON role.id = role_resource.role_id
		LEFT JOIN wsun_resource AS resource ON role_resource.resource_id = resource.id
		<where>
        	<if test="code!=null and code!=''">
				role.`code` like '%${code}%'
			</if>
        	<if test="name!=null and name!=''">
				role.`name` like '%${name}%'
			</if>
        	<if test="resourceCode!=null and resourceCode!=''">
				resource.`code` like '%${resourceCode}%'
			</if>
		</where>
		GROUP BY role.id
		ORDER BY
			role.order_id
	</select>
	
	<select id="getRoleListCount" resultType="Integer" parameterType="Role">
		SELECT
			count(DISTINCT role.id)
		FROM
			wsun_role AS role
		LEFT JOIN wsun_role_resource AS role_resource ON role.id = role_resource.role_id
		LEFT JOIN wsun_resource AS resource ON role_resource.resource_id = resource.id
		<where>
        	<if test="code!=null and code!=''">
				role.`code` like '%${code}%'
			</if>
        	<if test="name!=null and name!=''">
				role.`name` like '%${name}%'
			</if>
        	<if test="resourceCode!=null and resourceCode!=''">
				resource.`code` like '%${resourceCode}%'
			</if>
		</where>
	</select>
	<select id="getResources" parameterType="Integer" resultType="Resource">
		SELECT
			resource.id,
			resource.`code`,
			resource.`name`
		FROM
			wsun_resource resource
		INNER JOIN wsun_role_resource role_resource ON role_resource.resource_id = resource.id
		AND role_resource.role_id = #{id,jdbcType=BIGINT}
	</select>
	
	<resultMap id="RoleWithResourceMap" extends="BaseResultMap" type="Role">
		<collection property="resourceList" javaType="Resource">
			<result column="resource_id" property="id" jdbcType="BIGINT" />
			<result column="resource_code" property="code" jdbcType="VARCHAR" />
			<result column="resource_name" property="name" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	<!-- 查询角色信息By角色id -->
	<select id="getRoleDetailById" resultMap="RoleWithResourceMap" parameterType="java.lang.Long" >
	SELECT
		role.id,
		role.`code`,
		role.`name`,
		role.description,
		role.parent_id,
		role.order_id,
		resource.`id` AS resource_id,
		resource.`code` AS resource_code,
		resource.`name` AS resource_name
	FROM
		wsun_role AS role
	LEFT JOIN wsun_role_resource AS role_resource ON role.id = role_resource.role_id
	LEFT JOIN wsun_resource AS resource ON role_resource.resource_id = resource.id
	WHERE
		role.id = #{id,jdbcType=BIGINT}
		AND not exists (select 'X' from wsun_resource t1, wsun_resource t2 where t1.id = t2.parent_id AND t1.id = resource.id)
	ORDER BY
		role.order_id, resource.order_id
	</select>
	
  <select id="selectByCode" resultType="Integer" parameterType="java.lang.String" >
    select 
    	count(1)
    from wsun_role
    where code = #{code,jdbcType=VARCHAR}
  </select>
  
  <select id="getAll" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from wsun_role
  </select>
  
</mapper>